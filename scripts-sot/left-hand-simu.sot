import base

# ----------------------------------------------------
# --- BASIC DYNAMIC-SMALL     ------------------------
# ----------------------------------------------------
echo Creating the small dynamic
new DynamicHrp2 dyn
new DynamicHrp2 dyn2
import dynfilessmall
dyn2.parse
new VectorConstant zero
zero.resize 36
plug zero.out dyn2.position
plug zero.out dyn2.velocity
plug zero.out dyn2.acceleration

new VectorConstant dyn2ffposzero
dyn2ffposzero.resize 6
dyn2ffposzero.[] 0 0.0
dyn2ffposzero.[] 1 0.0
dyn2ffposzero.[] 2 0.0
dyn2ffposzero.[] 3 0.0
dyn2ffposzero.[] 4 0.0
dyn2ffposzero.[] 5 0.0

plug dyn2ffposzero.out dyn2.ffposition

dyn2.createOpPoint 0 22
dyn2.createOpPoint lh 29
dyn2.createOpPoint rleg 6
dyn2.createOpPoint lleg 12
dyn2.createOpPoint chest 14

dyn2.setProperty ComputeVelocity               false
dyn2.setProperty ComputeCoM                    false
dyn2.setProperty ComputeAccelerationCoM        false
dyn2.setProperty ComputeMomentum               false
dyn2.setProperty ComputeZMP                    false
dyn2.setProperty ComputeBackwardDynamics       false

set dyn.gearRatio [36](0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,207.69,381.54,0,0,219.23,231.25,266.67,250.0,145.45,350.0,0,0,0,0,0,0,0,0)
set dyn.inertiaRotor [36](0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69.6e-7,69.6e-7,0,0,69.6e-7,66.0e-7,10.0e-7,66.0e-7,11.0e-7,10.0e-7,0,0,0,0,0,0,0,0)

# ----------------------------------------------------
# --- FLEX -------------------------------------------
# ----------------------------------------------------
# ------- Flex based kinematics
new AngleEstimator flex
flex.fromSensor false
plug dyn2.lleg flex.contactEmbeddedPosition
plug dyn2.chest flex.sensorEmbeddedPosition

new RPYToMatrix attitudeSensor
# plug attitudeSensor.out flex.sensorWorldRotation
plug flex.waistWorldPoseRPY dyn.ffposition

# --- Flexibility velocity
new Derivator<Vector> flexV
plug flex.angles flexV.in

# --- PosFF from leg contact + sensor # DEPRECIATED
new WaistPoseFromSensorAndContact posKF
plug dyn2.lleg posKF.contact
plug dyn2.chest posKF.position
posKF.fromSensor true

# --- DYN With true posFF
dyn.parse
plug zero.out dyn.velocity
plug zero.out dyn.acceleration
# plug posKF.positionWaist dyn.ffposition
plug flex.waistWorldPoseRPY dyn.ffposition


# ----------------------------------------------------
# --- TASKS ------------------------------------------
# ----------------------------------------------------

# LEFT HAND FEATURE
dyn.createOpPoint 0 22
dyn.createOpPoint lleg 12

new FeaturePoint6d p6
new FeaturePoint6d p6d
plug dyn.J0 p6.Jq
plug dyn.0 p6.position
set p6.sdes p6d

# Goal position entities & signals
new Compose<R+T> comp
new MatrixConstant eye3
new VectorConstant t
plug eye3.out comp.in1
plug t.out comp.in2
plug comp.out p6d.position

# Set goal values
eye3.resize 3 3
eye3.eye
eye3.[] 0 0 0
eye3.[] 2 2 0
eye3.[] 0 2 -1
eye3.[] 2 0 1
set p6.selec 000111
p6.frame current
t.resize 3
t.[] 0 0.25
t.[] 1 -0.5
t.[] 2 .85

# LEFT HAND TASK
new Task task
task.add p6
new GainAdaptive gain
gain.setConstant .2
plug task.error gain.error
plug gain.gain task.controlGain


# LEGS CONTRAINTS
new Constraint legs
legs.add dyn.Jlleg

# --- SOT
new SOT sot
set sot.damping 1e-6
sot.addConstraint legs
sot.nbJoints 36

dispmat matlab

# OpenHRP initialization
new RobotSimu OpenHRP
OpenHRP.resize 36
OpenHRP.set [36](0,0,0,0,0,0,0,0,-1.04720,2.09440,-1.04720,0,0,0,-1.04720,2.09440,-1.04720,0,0.0000,0,-0,-0,0.17453,-0.17453,-0.17453,-0.87266,0,-0,0.1,0.17453,-0.17453,-0.17453,-0.87266,0,-0,0.1)

plug sot.control OpenHRP.control
plug OpenHRP.state dyn.position
plug OpenHRP.state dyn2.position
plug OpenHRP.attitude posKF.attitudeIN
plug OpenHRP.attitude flex.sensorWorldRotation

sleep 1
sot.push task
