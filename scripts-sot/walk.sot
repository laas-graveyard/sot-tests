# ###############################################
# import dynsmall
# ###############################################

dispmat matlab
# ----------------------------------------------------
# 1. BASIC DYNAMIC-SMALL     ------------------------
# ----------------------------------------------------
echo Creating the small dynamic
new DynamicHrp2 dyn
new DynamicHrp2 dyn2
import dynfilessmall
dyn2.parse
new VectorConstant zero
zero.resize 36
plug zero.out dyn2.position
plug zero.out dyn2.velocity
plug zero.out dyn2.acceleration

# Free-flyer
new VectorConstant dyn2ffposzero
dyn2ffposzero.resize 6
dyn2ffposzero.[] 0 0.0
dyn2ffposzero.[] 1 0.0
dyn2ffposzero.[] 2 0.0
dyn2ffposzero.[] 3 0.0
dyn2ffposzero.[] 4 0.0
dyn2ffposzero.[] 5 0.0

plug dyn2ffposzero.out dyn2.ffposition

# Create various operational points
dyn2.createOpPoint 0 22
dyn2.createOpPoint lh 29
dyn2.createOpPoint rleg 6
dyn2.createOpPoint lleg 12
dyn2.createOpPoint chest 14

dyn2.setProperty ComputeVelocity               false
dyn2.setProperty ComputeCoM                    false
dyn2.setProperty ComputeAccelerationCoM        false
dyn2.setProperty ComputeMomentum               false
dyn2.setProperty ComputeZMP                    false
dyn2.setProperty ComputeBackwardDynamics       false

# Motor specific variables
set dyn.gearRatio [36](0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,207.69,381.54,0,0,219.23,231.25,266.67,250.0,145.45,350.0,0,0,0,0,0,0,0,0)
set dyn.inertiaRotor [36](0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69.6e-7,69.6e-7,0,0,69.6e-7,66.0e-7,10.0e-7,66.0e-7,11.0e-7,10.0e-7,0,0,0,0,0,0,0,0)

# ----------------------------------------------------
# 2. FLEX -------------------------------------------
# ----------------------------------------------------
# ------- Flex based kinematics
new AngleEstimator flex
flex.fromSensor false
plug dyn2.lleg flex.contactEmbeddedPosition
plug dyn2.chest flex.sensorEmbeddedPosition

new RPYToMatrix attitudeSensor
# plug attitudeSensor.out flex.sensorWorldRotation
plug flex.waistWorldPoseRPY dyn.ffposition

# --- Flexibility velocity
new Derivator<Vector> flexV
plug flex.angles flexV.in

# --- PosFF from leg contact + sensor # DEPRECIATED
new WaistPoseFromSensorAndContact posKF
plug dyn2.lleg posKF.contact
plug dyn2.chest posKF.position
posKF.fromSensor true

# --- DYN With true posFF
dyn.parse
plug zero.out dyn.velocity
plug zero.out dyn.acceleration
# plug posKF.positionWaist dyn.ffposition
plug flex.waistWorldPoseRPY dyn.ffposition

new SOT sot
set sot.damping 1e-6
sot.nbJoints 36
dyn.createOpPoint Waist 0
dyn.createOpPoint 0 22
dyn.createOpPoint rleg 6
dyn.createOpPoint lleg 12


# --- COM
dyn.setComputeCom 1
# dyn.setProperty ComputeVelocity true
# dyn.setProperty ComputeMomentum true
# dyn.setProperty ComputeZMP true

new FeatureGeneric featureCom
plug dyn.com featureCom.errorIN
plug dyn.Jcom featureCom.jacobianIN
# set featureCom.selec 111

new FeatureGeneric featureComDes
# set featureComDes.errorIN [2](0,-0)
set featureCom.sdes featureComDes

new Task taskCom
taskCom.add featureCom
set taskCom.controlGain .3
# set taskCom.controlGain 1


# --- TWOFEET
new FeaturePoint6dRelative featureTwofeet
plug dyn.Jrleg  featureTwofeet.Jq
plug dyn.Jlleg  featureTwofeet.JqRef
plug dyn.rleg  featureTwofeet.position
plug dyn.lleg  featureTwofeet.positionRef
# set featureTwofeet.error [6](0,0,0,0,0,0)

new Task taskTwofeet
taskTwofeet.add featureTwofeet
set taskTwofeet.controlGain 0


# --- CONTACT CONSTRAINT
new Constraint legs
legs.add dyn.Jlleg



# ----------------------------------------------------
# 6. Hook up HRP          ----------------------------
# ----------------------------------------------------
plug sot.control OpenHRP.control
plug OpenHRP.state dyn.position
plug OpenHRP.state dyn2.position
plug OpenHRP.attitude posKF.attitudeIN
plug OpenHRP.attitude flex.sensorWorldRotation

import traces
plug sot.control OpenHRP.control

import small
# import force

# ###############################################
# import forceL
# ###############################################
dyn.createOpPoint lh 29


# import grip
# import teleoperation/teleop
import hwpgpginitpart1
import hwpgpginitpart2
import hwpginitframes
pg.parsecmd :stepseq 0.0 -0.095 0.0 0.0 0.19 0.0 0.0 -0.19 0.0 0.0 0.19 0.0 0.0 -0.19 0.0 0.0 0.19 0.0
plug lfo_H_wa.out OpenHRP.positionIN
import walkreact-new
import walking/hwpgfeettasksrel
